name: JavaSpringBoot CI with Gradle

# Trigger workflow on push or pull_request events on the main branch
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    # Run the job on the latest version of Ubuntu
    runs-on: ubuntu-latest

    # Define the steps for this job
    steps:
    
      # Step 1: Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up JDK (Java Development Kit)
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'  # You can change this to your desired version of JDK
          distribution: 'temurin'  # You can change the distribution to other JDKs like Zulu, OpenJDK, etc.

      # Step 3: Cache Gradle dependencies to speed up builds
      - name: Cache Gradle dependencies
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build with Gradle
        run: ./gradlew build --no-daemon  # --no-daemon prevents the Gradle daemon from running

      - name: Run tests with Gradle
        run: ./gradlew test --no-daemon  # This will run unit tests

      - name: Build Docker image
        run: docker build -t booking-api .

      - name: Deploy to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_USERNAME }}" | docker login --username $DOCKER_USERNAME --password-stdin
          docker push booking-api
